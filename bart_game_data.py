# -*- coding: utf-8 -*-
"""Bart_game_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rd0s7VfsYwEKg0VnA7go0LHmY5Egt0HC
"""

import pandas as pd

# Load the downloaded JSON file
with open('/content/bart game data.json', 'r') as file:
    data = json.load(file)

# Extracting data for analysis
user_id = list(data.keys())[0]
game_data = data[user_id]["BART"]
attempts_data = game_data["attempts"]
balloon_data = game_data["data"]

# Transforming data into DataFrame for analysis
attempts_df = pd.DataFrame(attempts_data).T
balloon_df = pd.DataFrame(balloon_data)

# Grouping users based on parameters
grouped_by_level = attempts_df.groupby("level").mean()
grouped_by_pop_point = attempts_df.groupby("pop_point").mean()
grouped_by_pump_count = attempts_df.groupby("pumpCount").mean()
grouped_by_score = attempts_df.groupby("score").mean()

# Displaying the grouped data
print("Grouped by Level:")
print(grouped_by_level)
print("\nGrouped by Pop Point:")
print(grouped_by_pop_point)
print("\nGrouped by Pump Count:")
print(grouped_by_pump_count)
print("\nGrouped by Score:")
print(grouped_by_score)

import pandas as pd

# Raw data from the provided link
data = {
    "05iCznlBxHdK46f8zZ2O30Wrk0v1": {
        "BART": {
            "attempts": {
                "-NqklwnNYQDSpnUcXtQ6": {
                    "level": 1,
                    "pop_point": 10,
                    "pumpCount": 4,
                    "score": 164,
                    "timeTakenForEachPump": [2111, 558, 1004, 1619]
                },
                "-Nqklxt-YOzl6uaiNCvX": {
                    "level": 2,
                    "pop_point": 4,
                    "pumpCount": 1,
                    "score": 41,
                    "timeTakenForEachPump": [2048]
                },
                "-NqklzECd9_e3R5yjxdk": {
                    "level": 3,
                    "pop_point": 10,
                    "pumpCount": 3,
                    "score": 123,
                    "timeTakenForEachPump": [1588, 442, 934]
                },
                # More attempts data...
            },
            "data": [
                {"balloon_color": "#ffca28", "pop_point": 10},
                {"balloon_color": "#1b1f23", "pop_point": 4},
                # More balloon data...
            ],
            "level": 21,
            "max_score_per_level": 1000,
            "number_of_weights": 12,
            "score_range": [41.666666666666664, 111.11111111111113],
            "status": "COMPLETED",
            "survey": "COMPLETED",
            "totalLevels": 21,
            "totalScore": 3594
        }
    }
}

# Extracting data for analysis
user_id = list(data.keys())[0]
game_data = data[user_id]["BART"]
attempts_data = game_data["attempts"]
balloon_data = game_data["data"]

# Transforming data into DataFrame for analysis
attempts_df = pd.DataFrame(attempts_data).T
balloon_df = pd.DataFrame(balloon_data)

# Grouping users based on parameters
grouped_by_level = attempts_df.groupby("level").mean()
grouped_by_pop_point = attempts_df.groupby("pop_point").mean()
grouped_by_pump_count = attempts_df.groupby("pumpCount").mean()
grouped_by_score = attempts_df.groupby("score").mean()

# Displaying the grouped data
print("Grouped by Level:")
print(grouped_by_level)
print("\nGrouped by Pop Point:")
print(grouped_by_pop_point)
print("\nGrouped by Pump Count:")
print(grouped_by_pump_count)
print("\nGrouped by Score:")
print(grouped_by_score)